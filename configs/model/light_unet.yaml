# @package _global_.model

# Specifies the type of model to be loaded by get_model in models.py
type: light_unet

# --- LightUNet specific hyperparameters ---

# Number of channels in the first convolutional layer.
# This will be doubled at each downsampling step in the U-Net encoder.
# A smaller value makes the model more lightweight.
base_channels: 32 # Options: 16, 32, 64

# Depth of the U-Net (number of downsampling/upsampling blocks).
# Given your input size of 48x72:
# depth 1: 48x72 -> 24x36 (bottleneck) -> 48x72
# depth 2: 48x72 -> 24x36 -> 12x18 (bottleneck) -> 24x36 -> 48x72
# depth 3: 48x72 -> 24x36 -> 12x18 -> 6x9 (bottleneck) -> 12x18 -> 24x36 -> 48x72
# A depth of 2 or 3 is reasonable.
depth: 2 # Options: 1, 2, 3

# Whether to use bilinear upsampling (True) or learnable transposed convolutions (False)
# in the U-Net decoder. Bilinear is often faster and can sometimes prevent checkerboard artifacts.
bilinear: True

# n_input_channels and n_output_channels will be automatically set by the
# get_model function based on cfg.data.input_vars and cfg.data.output_vars

